{"version":3,"sources":["PatternOutput/Hat.js","PatternOutput/Scarf.js","PatternOutput/Mittens.js","PatternOutput/PatternOutput.js","PatternGeneratorForm/PatternGeneratorForm.js","NavBar/NavBar.js","Footer/Footer.js","HowTo/HowTo.js","About/About.js","App/App.js","reportWebVitals.js","index.js"],"names":["Hat","props","className","type","onClick","axios","post","gauge","nickname","name","then","response","console","log","alert","catch","error","setStatus","href","target","rel","window","print","Scarf","Mittens","castVals","Math","round","useState","castOn","setCastOn","length","i","id","PatternOutput","project","src","alt","PatternGenerator","projectType","setProjectType","setName","setGauge","submitStatus","setSubmitStatus","search","useLocation","savedType","URLSearchParams","get","savedGauge","toUpperCase","autoComplete","placeholder","onChange","event","value","DropdownButton","title","variant","onSelect","slice","Dropdown","Item","preventDefault","NavBar","to","Footer","style","fontStyle","fontSize","HowTo","About","App","path","exact","component","PatternGeneratorForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5844e385.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Hat = (props) => {\r\n  const handlePatternSave = () => {\r\n    axios.post('/patterns', {\r\n      gauge: props.gauge,\r\n      type: 'hat',\r\n      nickname: props.name\r\n    })\r\n    .then(function (response) {\r\n      console.log(response);\r\n      alert(`Pattern Saved! Type: Hat, Gauge: ${props.gauge}. View your patterns under 'My Account.'`)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('Please log in to save your pattern.');\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"card pattern-display\">\r\n      <h1 className=\"card-title\">Your Hat Pattern</h1>\r\n      <h4>Sizes are given as (children, women, men).</h4>\r\n      <div className=\"pattern-button-area m-auto no-print\">\r\n        <button className=\"btn m-4 btn-info save-pattern\" type=\"button\" onClick={() => { handlePatternSave()} }>Save Pattern</button>\r\n        <button\r\n          onClick={() => {\r\n            props.setStatus();\r\n          }}\r\n          className=\"reset btn m-4 btn-light\"\r\n        >\r\n          ✖ RESET\r\n        </button>\r\n      </div>\r\n      <ol className=\"card-body\">\r\n        <li>\r\n          Cast on ({props.gauge * 20}, {props.gauge * 23}, {props.gauge * 24})\r\n          stitches.\r\n        </li>\r\n        <li>Knit in k1, p2 rib for 2.5 inches.</li>\r\n        <li>Knit in your chosen body stitch for (4.5, 5, 6.5) inches.</li>\r\n        <li>\r\n          Complete decrease set-up round:\r\n          <ul>\r\n            <li>\r\n              Knit in chosen stitch (\r\n              {props.gauge * 20 - 2}, {props.gauge * 23 - 2},{\" \"}\r\n              {props.gauge * 24 - 2}\r\n              ), k2tog, place marker.\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          Then continue decrease pattern:\r\n          <ul>\r\n            <li>Even rounds: knit in chosen stitch.</li>\r\n            <li>\r\n              Odd rounds: knit in chosen stitch to 2 before marker, k2tog.\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          Repeat these two rounds until you have (10, 11, 12) stitches left,\r\n          ending on an odd round.{\" \"}\r\n        </li>\r\n        <li>\r\n          Cut yarn leaving long tail and thread remaining stitches through,\r\n          pulling tight and securing the end on the inside of the hat with a\r\n          crochet hook.\r\n        </li>{\" \"}\r\n        <li>\r\n          Weave in starting end and{\" \"}\r\n          <a\r\n            href=\"https://blog.knitpicks.com/tutorial-blocking-knits/\"\r\n            target=\"_blank\" rel=\"noreferrer\"\r\n          >\r\n            block hat\r\n          </a>{\" \"}\r\n          to measurements below.\r\n        </li>\r\n        <ul>\r\n          <li> Children = (20\" x 8.5\")</li>\r\n          <li> Women = (23\" x 11\")</li>\r\n          <li> Men = (24\" x 11.5\")</li>\r\n        </ul>\r\n      </ol>\r\n      <button\r\n        className=\"print btn btn-light no-print\"\r\n        onClick={() => {\r\n          window.print();\r\n        }}\r\n      >\r\n        📄 PRINT\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hat;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Scarf = (props) => {\r\n\r\n  const handlePatternSave = () => {\r\n    axios.post('/patterns', {\r\n      gauge: props.gauge,\r\n      type: 'scarf',\r\n      nickname: props.name\r\n    })\r\n    .then(function (response) {\r\n      console.log(response);\r\n      alert(`Pattern Saved! Type: Scarf, Gauge: ${props.gauge}. View your patterns under 'My Account.'`)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('Please log in to save your pattern.');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"card pattern-display\">\r\n      <h1 className=\"card-title\">Your Scarf Pattern</h1>\r\n      <h4>Sizes are given as (child, adult).</h4>\r\n      <div className=\"pattern-button-area m-auto no-print\">\r\n        <button className=\"btn m-4 btn-info save-pattern\" type=\"button\" onClick={() => { handlePatternSave()} }>Save Pattern</button>\r\n        <button\r\n          onClick={() => {\r\n            props.setStatus();\r\n          }}\r\n          className=\"reset btn m-4 btn-light\"\r\n        >\r\n          ✖ RESET\r\n        </button>\r\n      </div>\r\n      <ol className=\"card-body\">\r\n        <li>\r\n          Cast on ({props.gauge * 6}, {props.gauge * 8}) stitches.{\" \"}\r\n        </li>\r\n        <li>\r\n          Knit in your chosen stitch until you measure (48, 60) inches from cast\r\n          on, or desired length, and bind off in pattern.\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"https://blog.knitpicks.com/tutorial-blocking-knits/\"\r\n            target=\"_blank\" rel=\"noreferrer\"\r\n          >\r\n            Block\r\n          </a>{\" \"}\r\n          to measurements listed below.\r\n        </li>\r\n        <ul>\r\n          <li> Children = (6\" x 48\")</li>\r\n          <li> Adult = (8\" x 60\")</li>\r\n        </ul>\r\n      </ol>\r\n      <button\r\n        className=\"print btn btn-light no-print\"\r\n        onClick={() => {\r\n          window.print();\r\n        }}\r\n      >\r\n        📄 PRINT\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scarf;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Mittens = (props) => {\r\n\r\n  const handlePatternSave = () => {\r\n    axios.post('/patterns', {\r\n      gauge: props.gauge,\r\n      type: 'mittens',\r\n      nickname: props.name\r\n    })\r\n    .then(function (response) {\r\n      console.log(response);\r\n      alert(`Pattern Saved! Type: Mittens, Gauge: ${props.gauge}. View your patterns under 'My Account.'`)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('Please log in to save your pattern.');\r\n    });\r\n  }\r\n\r\n  const castVals = [\r\n    Math.round(props.gauge * 5.5),\r\n    Math.round(props.gauge * 6.5),\r\n    Math.round(props.gauge * 7),\r\n    Math.round(props.gauge * 8),\r\n  ];\r\n\r\n  const [castOn, setCastOn] = useState([]);\r\n\r\n  // check for odd numbers and make even\r\n  if (castOn.length < 4) {\r\n    for (let i = 0; i < castVals.length; i++) {\r\n      if (castVals[i] % 2 !== 0) {\r\n        castVals[i] = castVals[i] + 1;\r\n      }\r\n      setCastOn([...castVals]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card pattern-display\">\r\n      <h1 className=\"card-title\">Your Mitten Pattern</h1>\r\n      <h4>Sizes are given as (children, adult S, M, L).</h4>\r\n      <h4>\r\n        See <a href=\"#measurements\">measurements</a> below.\r\n      </h4>\r\n      <div className=\"pattern-button-area m-auto no-print\">\r\n        <button className=\"btn m-4 btn-info save-pattern\" type=\"button\" onClick={() => { handlePatternSave()} }>Save Pattern</button>\r\n        <button\r\n          onClick={() => {\r\n            props.setStatus();\r\n          }}\r\n          className=\"reset btn m-4 btn-light\"\r\n        >\r\n          ✖ RESET\r\n        </button>\r\n      </div>\r\n      <h3 className=\"mt-4\">\r\n        <strong>Work cuff:</strong>\r\n      </h3>\r\n      <ol className=\"card-body\">\r\n        <li>\r\n          Cast on ({castOn[0]}, {castOn[1]}, {castOn[2]}, {castOn[3]}) stitches\r\n          with double pointed needles <strong>one size smaller</strong> than the\r\n          needles you used to check your gauge.\r\n        </li>\r\n        <li>\r\n          <strong>Place marker</strong> and join in the round.\r\n        </li>\r\n        <li>Work k1, p1 rib for (2.5, 3, 4, 4) inches.</li>\r\n        <li>\r\n          Switch to the <strong>larger needles</strong> (the ones you used to\r\n          check your gauge.\r\n        </li>\r\n        <li>Knit in your chosen stitch for (.5, .75, .75, .75) inches.</li>\r\n      </ol>\r\n      <h3 className=\"mt-4\">\r\n        <strong>Work thumb gusset:</strong>\r\n      </h3>\r\n      <ol>\r\n        <li>\r\n          Set up round: m1, k1, m1, place marker. Knit in chosen stitch to end\r\n          of round.\r\n        </li>\r\n        <li>Rounds 1 and 2: knit in chosen stitch.</li>\r\n        <li>\r\n          Round 3: m1, knit in chosen stitch to marker, m1, slip marker, knit in\r\n          chosen stitch to end.\r\n        </li>\r\n        <li>\r\n          Work rounds 1-3 for approximately (1.5, 2, 2, 2,25) inches, ending\r\n          with round 3.\r\n        </li>\r\n        <li>\r\n          Place stitches between the markers on a piece of waste yarn and leave\r\n          to the side. Remove the extra marker so that only the beginning of\r\n          round marker remains.\r\n        </li>\r\n      </ol>\r\n      <h3 className=\"mt-4\">\r\n        <strong>Work and shape body:</strong>\r\n      </h3>\r\n      <ol>\r\n        <li>\r\n          Knit in chosen stitch until body measures (3, 3.75, 4, 4.5) inches\r\n          from gusset.\r\n        </li>\r\n        <li>\r\n          Decrease setup round: knit in chosen stitch (\r\n          {Math.round((props.gauge * 5.5) / 2)},{\" \"}\r\n          {Math.round((props.gauge * 6.5) / 2)},{\" \"}\r\n          {Math.round(props.gauge * 7) / 2}, {Math.round((props.gauge * 8) / 2)}\r\n          ), place marker, knit until end of round.\r\n        </li>\r\n        <li>\r\n          Decrease round: *k1, ssk, knit in chosen stitch to 3 sts before\r\n          marker, k2tog, k1*\r\n        </li>\r\n        <li>Work decrease round until 8 stitches remain.</li>\r\n        <li>\r\n          Break yarn and thread tail through remaining stitches; pull tight to\r\n          secure.\r\n        </li>\r\n      </ol>\r\n      <h3 className=\"mt-4\">\r\n        <strong>Work thumb:</strong>\r\n      </h3>\r\n      <ol>\r\n        <li>\r\n          Put held stitches on larger needles and knit in chosen stitch across,\r\n          picking up 1 stitch from body of mitten.\r\n        </li>\r\n        <li>Place marker and join in the round.</li>\r\n        <li>\r\n          Knit in chosen stitch for (1.25, 1.75, 2, 2.25) inches from picked up\r\n          stitch.\r\n        </li>\r\n        <li>*k2tog*</li>\r\n        <li>\r\n          Break yarn, threading through remaining stitches and pull tight to\r\n          secure.\r\n        </li>\r\n      </ol>\r\n      <h3 className=\"mt-4\">\r\n        <strong>Finishing:</strong>\r\n      </h3>\r\n      <ol id=\"measurements\">\r\n        <li>\r\n          Weave in ends and{\" \"}\r\n          <a\r\n            href=\"https://blog.knitpicks.com/tutorial-blocking-knits/\"\r\n            target=\"_blank\" rel=\"noreferrer\"\r\n          >\r\n            block mittens\r\n          </a>{\" \"}\r\n          to measurements below.\r\n        </li>\r\n        <ul>\r\n          <li> Children = (6\" circum. x 8.5\" long)</li>\r\n          <li> Adult S = (7\" x 10.5\")</li>\r\n          <li> Adult M = (7.75\" x 12\")</li>\r\n          <li> Adult L = (8.5\" x 13\")</li>\r\n        </ul>\r\n      </ol>\r\n      <button\r\n        className=\"print btn btn-light no-print\"\r\n        onClick={() => {\r\n          window.print();\r\n        }}\r\n      >\r\n        📄 PRINT\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mittens;\r\n","import React from \"react\";\r\nimport Hat from \"./Hat\";\r\nimport Scarf from \"./Scarf\";\r\nimport Mittens from \"./Mittens\";\r\nimport \"./PatternOutput.css\";\r\n\r\nexport default function PatternOutput(props) {\r\n  const project = () => {\r\n    switch (props.project) {\r\n      case \"SCARF\":\r\n        return (\r\n          <Scarf\r\n            setStatus={props.setStatus}\r\n            gauge={props.gauge}\r\n            name={props.name}\r\n          />\r\n        );\r\n      case \"HAT\":\r\n        return (\r\n          <Hat\r\n            setStatus={props.setStatus}\r\n            gauge={props.gauge}\r\n            name={props.name}\r\n          />\r\n        );\r\n      case \"MITTENS\":\r\n        return (\r\n          <Mittens\r\n            setStatus={props.setStatus}\r\n            gauge={props.gauge}\r\n            name={props.name}\r\n          />\r\n        );\r\n      default:\r\n        return <p>Please select a valid pattern type.</p>;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {project()}\r\n      <h3 className=\"stitch-title no-print\">Suggested Stitches</h3>{\" \"}\r\n      <ul className=\"difficulty-ratings no-print\">\r\n        <li>⭐ Easier </li>\r\n        <li>⭐⭐ Intermediate </li>\r\n        <li>⭐⭐⭐ Advanced</li>\r\n      </ul>\r\n      <div className=\"row stitch-display no-print\">\r\n        <div className=\"card col-sm-3 no-print\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src=\"http://freeknitstitches.com/Images/106/106-big.jpg\"\r\n            alt=\"pattern\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              <a href=\"http://freeknitstitches.com/pattern.php?num=106&amp;menu=2\">\r\n                Forked Lightning\r\n              </a>{\" \"}\r\n              ⭐\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div className=\"card col-sm-3 no-print\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src=\"http://freeknitstitches.com/Images/216/216-big.jpg\"\r\n            alt=\"pattern\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              {\" \"}\r\n              <a href=\"http://freeknitstitches.com/pattern.php?num=216&amp;menu=1\">\r\n                Twisted Rib\r\n              </a>{\" \"}\r\n              ⭐⭐\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div className=\"card col-sm-3 no-print\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src=\"http://freeknitstitches.com/Images/290/290-big.jpg\"\r\n            alt=\"pattern\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              {\" \"}\r\n              <a href=\"http://freeknitstitches.com/pattern.php?num=290&amp;menu=4\">\r\n                Sine Wave\r\n              </a>{\" \"}\r\n              ⭐⭐⭐\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"yarn-calculator no-print\">\r\n        Not sure if you have enough yarn for your project?{\" \"}\r\n        <a href=\"https://www.JimmyBeansWool.com/knittingCalculator\">\r\n          Find out here.\r\n        </a>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport PatternOutput from \"../PatternOutput/PatternOutput\";\r\n\r\nexport default function PatternGenerator() {\r\n  const [projectType, setProjectType] = useState(\"Select Your Project\");\r\n  const [name, setName] = useState(\"PurlBot User\");\r\n  const [gauge, setGauge] = useState();\r\n  const [submitStatus, setSubmitStatus] = useState(false);\r\n\r\n\r\n// Handle query params from backend saved patterns list\r\n\r\nconst search = useLocation().search;\r\nconst savedType = new URLSearchParams(search).get('type');\r\nconst savedGauge = new URLSearchParams(search).get('gauge');\r\n\r\nif (savedType && savedGauge) {\r\n  return (\r\n    <PatternOutput\r\n      setStatus={setSubmitStatus}\r\n      project={savedType.toUpperCase()}\r\n      gauge={savedGauge}\r\n    />\r\n  )\r\n}\r\n\r\n  function handleName(event) {\r\n    if (event.target.value.length > 0) {\r\n      setName(event.target.value);\r\n    }\r\n  }\r\n  function handleGauge(event) {\r\n      setGauge(event.target.value);\r\n  }\r\n  function handleProjectType(event) {\r\n    setProjectType(event.slice(2).toUpperCase());\r\n  }\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (gauge * 0 === 0) setSubmitStatus(true);\r\n    else {\r\n      alert(\"Please enter a number for your gauge.\");\r\n    }\r\n  }\r\n\r\n  if (submitStatus) {\r\n    return (\r\n      <>\r\n        <PatternOutput\r\n          setStatus={setSubmitStatus}\r\n          project={projectType}\r\n          name={name}\r\n          gauge={gauge}\r\n        />\r\n      </>\r\n    );\r\n  } else\r\n    return (\r\n      <div id={submitStatus ? null : \"pattern-generator\"}>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <br />\r\n            <h5 className=\"card-title\">Pattern Generator</h5>\r\n\r\n            <form id=\"scarf-form\" autoComplete=\"off\">\r\n              <br />\r\n              <h5>Optional: enter a nickname for the pattern.</h5>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Type your pattern's nickname here...\"\r\n                id=\"name\"\r\n                onChange={handleName}\r\n              />\r\n              <br />\r\n              <h5>What do you want to knit?</h5>\r\n              <div className=\"form-group\">\r\n                <DropdownButton\r\n                  id=\"dropdown-basic-button\"\r\n                  title={projectType}\r\n                  variant=\"primary\"\r\n                  onSelect={handleProjectType}\r\n                >\r\n                  <Dropdown.Item href=\"#/scarf\" value=\"Scarf\">\r\n                    SCARF\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/hat\" value=\"Hat\">\r\n                    HAT\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/mittens\" value=\"Mittens\">\r\n                    MITTENS\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n              <br />\r\n              <h5>\r\n                On your gauge swatch, how many stitches do you count\r\n                <strong> horizontally </strong> per inch?\r\n              </h5>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Type a number here...\"\r\n                id=\"gauge\"\r\n                onChange={handleGauge}\r\n              />\r\n              <br />\r\n            </form>\r\n            <button\r\n              className=\"btn btn-lg btn-success\"\r\n              type=\"button\"\r\n              id=\"submit\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <nav className=\"no-print navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <h1 className=\"nav-title\">\r\n            <span id=\"purl-title\">Purl</span>\r\n            <span id=\"bot-title\">Bot</span>\r\n          </h1>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to=\"/how-to\" className=\"nav-link\">\r\n                How To Use\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"http://127.0.0.1:5000/account\" className=\"nav-link\">\r\n                My Account\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item register\">\r\n                <a href=\"http://127.0.0.1:5000/register\" className=\"nav-link\">\r\n                  <button className=\"btn btn-success\">Register</button>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item login\">\r\n                <a href=\"http://127.0.0.1:5000/login\" className=\"nav-link\">\r\n                  <button className=\"btn btn-primary\">Log In</button>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"http://127.0.0.1:5000/logout\" className=\"nav-link\">\r\n                  <button className=\"btn btn-danger\">Log Out</button>\r\n                </a>\r\n              </li>\r\n\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nexport default function Footer() {\r\n  return (\r\n    <footer id=\"coded-by\" className=\"no-print\">\r\n      <a\r\n        href=\"https://github.com/griffique/griffin-she-codes-plus\"\r\n        target=\"_blank\" rel=\"noreferrer\"\r\n      >\r\n        Open Source Code\r\n      </a>{\" \"}\r\n      by {\"\"}\r\n      <a\r\n        href=\"https://www.linkedin.com/in/quinn-griffin-9955711b8/\"\r\n        target=\"_blank\" rel=\"noreferrer\"\r\n      >\r\n        Quinn Griffin\r\n      </a>{\" \"}\r\n      <br />\r\n      <span style={{ fontStyle: \"italic\", fontSize: \"16px\" }}>\r\n        {\" \"}\r\n        Have you made something with PurlBot?{\" \"}\r\n        <a href=\"mailto:purlbot@protonmail.com\">Contact me</a> with photos of\r\n        your project or suggestions!\r\n      </span>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function HowTo() {\r\n  return (\r\n    <div className=\"using-purlbot\" id=\"how-to\">\r\n      <img\r\n        src=\"/images/howto.jpg\"\r\n        className=\"card-img-top img-fluid\"\r\n        alt=\"How to use Purlbot\"\r\n      />\r\n      <div>\r\n        <div className=\"text-area\">\r\n          <ol>\r\n            <li>\r\n              Choose your yarn and determine approximately how many yards you\r\n              have.\r\n            </li>\r\n            <li>Check the yarn label for suggested needle size.</li>\r\n            <li>\r\n              Using the yarn and needles you've chosen, knit a gauge swatch of\r\n              at least 4\" x 4\" in the stitch you intend to use for your\r\n              project.*\r\n            </li>\r\n            <li>\r\n              Determine the number of stitches you knit in one inch, both\r\n              horizontally and vertically. This is your gauge.\r\n            </li>\r\n            <li>Use PurlBot to generate a custom pattern!</li>\r\n          </ol>\r\n          <h6 className=\"note mt-3\">\r\n            *This is important because the stitch may change your gauge. A cable\r\n            pattern, for example, will make it tighter, while a lace pattern\r\n            often makes it looser.\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"about-purlbot\" id=\"about\">\r\n      <img\r\n        src=\"/images/about.jpg\"\r\n        className=\"card-img-top img-fluid\"\r\n        alt=\"About Purlbot\"\r\n      />\r\n      <div>\r\n        <div className=\"text-area\">\r\n          <p>\r\n            What if a knitting pattern could be customized to your gauge?\r\n            Imagine, no more creating and measuring multiple swatches, switching\r\n            out needles until you find a match.\r\n          </p>\r\n          <p>\r\n            <span id=\"purl-title-body\">Purl</span>\r\n            <span id=\"bot-title-body\">Bot</span> makes that vision a reality.\r\n            Just tell us your gauge and we'll generate a basic scarf, hat or\r\n            mitten pattern for you.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PatternGeneratorForm from \"../PatternGeneratorForm/PatternGeneratorForm\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"../NavBar/NavBar.js\";\r\nimport Footer from \"../Footer/Footer.js\";\r\nimport HowTo from \"../HowTo/HowTo.js\";\r\nimport About from \"../About/About.js\";\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PatternGeneratorForm}></Route>\r\n          <Route path=\"/how-to\" exact component={HowTo}></Route>\r\n          <Route path=\"/about\" exact component={About}></Route>\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}